I. Git
    - Git là một chương trình chạy trong máy để lưu trữ các phiên bản của 1 project nào đó, dễ kiểm soát code và 
      backup nếu xảy ra lỗi hoặc vấn đề không xử lý kịp
    - Git gồm có 3 vùng là : 
        + Working directory : là vùng làm việc trong project, xử lý thêm, sửa và xóa code trong các file
        + Staging area      : là vùng trung gian hay gọi là vùng sắp xếp, nó nằm giữa 2 vùng Working và Repository giúp 
                              sắp xếp những file được thêm vào
        + Repository        : là vùng lưu trữ các đoạn code sau khi đã hoàn tất việc chỉnh sửa trong vùng staging area
    - Chuyển file từ Working directory sang Staging area ta sử dụng add
    - Chuyển file từ Staging area sang Repository sử dụng lệnh commit
    
    * Lệnh không quá quan trọng
        + git --version: 
            ● Xem phiên bản GIT hiện tại đang được cài trên máy tính.
        + clear: 
            ● Xóa màn hình terminal.
    * Các lệnh quan trọng:
        - Về file:
            + git init: 
                ● Khởi tạo repository (kho lưu trữ) cho dự án.
                ● Chạy câu lệnh trong thư mục gốc của dự án.

            + git status: 
                ● Là lệnh thực hiện trong vùng Working directory và Staging area, giúp kiểm tra xem file nào đã
                được thêm, hoặc sửa trong Staging area. Có kiểm tra file trong Repository nếu có file trong đó.
                ● Để xem trạng thái của những file đã được thay đổi trong dự án.
                    -> Màu đỏ: file đang ở Working directory
                        + Nếu là Changes not staged for commit: file trong Working đã bị chỉnh sửa so với file đã có trong Staging area
                        + Nếu là Untracked files: file chưa được thêm vào Staging area 
                    -> Màu xanh: file đã được thêm vào Staging area (Trong Staging area)

            + git add ten_File hoặc git add . : 
                ● Chuyển các file đã thay đổi từ vùng Working sang vùng Staging. Nếu có rồi nó sẽ ghi đè lên file cũ trước đó
                ● Staging area có tác dụng sắp xếp lại những file đã thêm vào
                    -> git add ten_File: Thêm 1 file vào Staging area
                    -> git add .: Thêm tất cả các file trong Working directory vào Staging area

            + git commit -m"Nội dung": 
                ● Chuyển các file từ vùng Staging sang vùng Repository 
                nếu đã có file trong Repository thì nó sẽ ghi đè file đó từ Staging area.
                ● Repository có tác dụng tạo ra 1 phiên bản mới.
                * Chú ý :   "Nội dung" phải là nội dung mô tả về việc thêm file đó vào Repository
                            Khi thực hiện commit thì chuyển tất cả file trong Staging area sang Repository
            + git log :
                ● Xem lại lịch sử các commit mà ta đã thực hiện
                ● Commit mới sẽ hiện bên trên, commit cũ sẽ hiện bên dưới.
                ● Mỗi commit sẽ có 1 mã hash riêng biệt. Example: commit 35f1ea24dacf3c0de7d6813ea49b97577189aff2(id_commit)

            + git show commit_id:
                ● Xem chi tiết về 1 commit nào đó. 
                ● File đó thay đổi ra sao, thay đổi như thế nào hay được thêm mới.

            + git diff: Từ lúc ta đưa vào Repository thì khi chỉnh sửa gì nó sẽ biết được, mỗi lần đưa vào là reset lại mới
                ● Xem sự thay đổi của một file sau khi chỉnh sửa. (So sánh 2 file ở Working directory và Repository)
                ● Điều kiện là file đó vẫn đang ở khu vực Working -> nghĩa là chưa thêm vào Staging area mới sử dụng
            
            + gitk: 
                ● Mở giao diện đồ họa của GIT.
                ● Giúp ta nhìn lại lịch sử commit dễ hơn
                ● Hiển thị lịch sử commit, branch, tag, ...
            
            + git checkout -- ten_file: Từ lúc ta đưa vào Repository thì khi reset lại nó sẽ quay lại file cuối đưa vào Repository
                ● Bỏ đi những thay đổi của file, để file đó trở về như lúc ban đầu (So sánh 2 file ở Working directory và Repository)
                ● Áp dụng cho file đang ở vùng Working -> nghĩa là chưa thêm vào Staging area mới sử dụng

            + git reset ten_file:
                ● Chuyển file đó từ vùng Staging trở lại vùng Working
                ● Áp dụng cho file đang ở vùng Staging -> nghĩa là đã thêm vào Staging area mới sử dụng

            + git reset --soft commit_id
                ● Chuyển từ trạng thái đã commit về trạng thái trước lúc chạy lệnh git commit.
                ● Tức là từ Repository về lại Staging
                ● Chú ý : Lệnh này chỉ lấy các commit_id sau commit_id mới nhất ta mới dùng

            + git reset --mixed commit_id
                ● Chuyển từ trạng thái đã commit về trạng thái trước lúc chạy lệnh git add.
                ● Tức là từ Repository về lại Working.
                ● Chú ý : Lệnh này chỉ lấy các commit_id sau commit_id mới nhất ta mới dùng
        - Về nhánh cây:
            - Nhánh master hay main là nhánh luu trữ chính của dự án, nó sẽ chứa toàn bộ code của dự án
            - Còn các các nhánh khác chỉ là nhánh phụ để phát triển, sửa lỗi, thử nghiệm, ...
            + git branch: 
                ● Xem tất cả các nhánh đang có trong dự án.
                ● Nhánh nào có dấu * và màu xanh là nhánh đang được sử dụng.
            + git branch -b ten_nhanh: 
                ● Tạo ra 1 nhánh mới trong dự án.
                ● Khi tạo ra 1 nhánh mới thì nó sẽ copy toàn bộ code từ nhánh hiện tại sang nhánh mới.
                ● Chú ý: Nếu ta tạo file mới ở nhánh mới thì khi quay lại nhánh chính thì file đó sẽ mất